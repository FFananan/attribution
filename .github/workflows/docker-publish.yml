name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

    paths:
      - 'attribution/**'

  pull_request:
    branches:
      - master
    paths:
      - 'attribution/**'
    
env:
  IMAGE_NAME: attribution
  USER_NAME: tencentad

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: docker build attribution --file attribution/Dockerfile 

  build:
    runs-on: ubuntu-latest

    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
        
    - name: Get dependencies
      run: |
        cd attribution
        go get honnef.co/go/tools/cmd/staticcheck
        
    - name: Build
      run: |
        cd attribution
        go install -v attribution_server.go

    - name: Test
      run: |
        cd attribution
        go test ./... -bench . -benchmem
    
    - name: Go vet
      run: |
        cd attribution
        go vet -httpresponse -assign -nilfunc -printf -unreachable -atomic ./...
      
    - name: Staticcheck
      run: |
        cd attribution
        staticcheck -checks all,-ST1003,-ST1000,-S1002,-U1000,-ST1008,-SA9003,-SA1019,-ST1005,-ST1016,-S1008,-SA4009,-ST1017,-S1000,-ST1012,-SA4004,-ST1006,-ST1020,-ST1021 ./...

  push:
    needs: 
      - test
      - build

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build attribution --file attribution/Dockerfile --tag $IMAGE_NAME

      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.DOCKERHUB_PAT }}" | docker login --username $USER_NAME --password-stdin

      - name: Push image to GitHub Container Registry
        run: |
          IMAGE_ID=$USER_NAME/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
